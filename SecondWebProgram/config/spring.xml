<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        ">

	<!-- 加载数据库连接信息的属性文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />

	<!-- 配置C3P0数据源 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">

		<property name="driverClass" value="${dbDriver}"></property>
		<property name="jdbcUrl" value="${dbUrl}"></property>
		<property name="user" value="${dbUsername}"></property>
		<property name="password" value="${dbPassword}"></property>

		<property name="initialPoolSize" value="3"></property>
		<property name="maxPoolSize" value="10"></property>
		<property name="maxStatements" value="100"></property>
		<property name="acquireIncrement" value="2"></property>
	</bean>

	<!-- 配置SessionFactory -->
	<bean name="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>

		<!-- 指定MyBatis配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis.xml"></property>

		<!-- 指定MyBatis映射文件的位置 -->
		<property name="mapperLocations" value="classpath:com/neuedu/mapper/*.xml"></property>

		<!-- 给实体类起别名 -->
		<property name="typeAliasesPackage" value="com.neuedu.entity" />

	</bean>

	<!-- 自动扫描mapper接口的所在的包，将接口的实现类自动注入到Spring IoC容器中 Bean的名称默认为接口类名的首字母小写 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.neuedu.mapper"></property>
	</bean>


	<!-- 配置事务管理器 -->
	<bean name="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">

		<!-- 注入DataSource -->
		<property name="dataSource" ref="dataSource"></property>

	</bean>
	<!-- 1111 -->
	<context:component-scan base-package="com.neuedu"></context:component-scan>
	
	<!-- 开启注解方式事务管理的配置，并指定事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!--  配置事务通知
	<tx:advice id="txAdvice" transaction-manager="txManager">

		指定事务属性，即事务管理器如何控制事务
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>

	</tx:advice>

	基于AOP配置声明式事务管理，即指定在哪些类的哪些方法上使用事务管理功能
	<aop:config>

		配置切入点表达式
		<aop:pointcut expression="execution(* com.neuedu.service.UserService.*(..))"
			id="myPointcut" />

		根据切入点表达式织入事务通知
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />

	</aop:config>

	<bean id="userService" class="com.neuedu.service.impl.UserServiceImpl">
		<property name="userMapper" ref="userMapper"></property>
	</bean> -->
</beans>
